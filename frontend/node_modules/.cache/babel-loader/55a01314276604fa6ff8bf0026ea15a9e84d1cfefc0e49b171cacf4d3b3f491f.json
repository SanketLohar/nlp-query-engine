{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\nlp-query-engine\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleQuerySubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setResult(null);\n    setError('');\n    try {\n      const response = await axios.post('http://localhost:8000/api/query', {\n        query\n      });\n      setResult(response.data);\n    } catch (err) {\n      setError('An error occurred. Please check the server logs and try again.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderTable = data => {\n    if (!data || data.length === 0 || data.error) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.error ? `Error: ${data.error}` : 'No results found.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }, this);\n    }\n    const headers = Object.keys(data[0]);\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 36\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headers.map(header => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: JSON.stringify(row[header])\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 38\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"NLP Query Engine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleQuerySubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Ask a question about your data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? 'Thinking...' : 'Ask'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Generated SQL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"sql-query\",\n          children: result.sql_results.generated_sql\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), renderTable(result.sql_results.results)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ixxmd1J7Jpi5HUcvhrTBVw0zAKQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","query","setQuery","result","setResult","loading","setLoading","error","setError","handleQuerySubmit","e","preventDefault","response","post","data","err","console","renderTable","length","children","fileName","_jsxFileName","lineNumber","columnNumber","headers","Object","keys","map","header","row","index","JSON","stringify","className","onSubmit","type","value","onChange","target","placeholder","disabled","sql_results","generated_sql","results","_c","$RefreshReg$"],"sources":["C:/Users/hp/nlp-query-engine/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [query, setQuery] = useState('');\r\n  const [result, setResult] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleQuerySubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setResult(null);\r\n    setError('');\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/api/query', { query });\r\n      setResult(response.data);\r\n    } catch (err) {\r\n      setError('An error occurred. Please check the server logs and try again.');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const renderTable = (data) => {\r\n    if (!data || data.length === 0 || data.error) {\r\n      return <p>{data.error ? `Error: ${data.error}` : 'No results found.'}</p>;\r\n    }\r\n\r\n    const headers = Object.keys(data[0]);\r\n\r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {headers.map(header => <th key={header}>{header}</th>)}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, index) => (\r\n            <tr key={index}>\r\n              {headers.map(header => <td key={header}>{JSON.stringify(row[header])}</td>)}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>NLP Query Engine</h1>\r\n        <form onSubmit={handleQuerySubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            placeholder=\"Ask a question about your data...\"\r\n          />\r\n          <button type=\"submit\" disabled={loading}>\r\n            {loading ? 'Thinking...' : 'Ask'}\r\n          </button>\r\n        </form>\r\n\r\n        {error && <div className=\"error\">{error}</div>}\r\n\r\n        {result && (\r\n          <div className=\"results\">\r\n            <h3>Generated SQL</h3>\r\n            <pre className=\"sql-query\">{result.sql_results.generated_sql}</pre>\r\n            <h3>Results</h3>\r\n            {renderTable(result.sql_results.results)}\r\n          </div>\r\n        )}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}